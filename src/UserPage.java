/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Userpage.java
 *
 * Created on Nov 16, 2009, 10:24:26 PM
 */

/**
 *
 * @author 17thkent
 */
import java.awt.*;
import javax.swing.*;
import java.util.ArrayList;
import javax.swing.ImageIcon;

public class UserPage extends javax.swing.JFrame {

    private Database db = new Database();

    private ArrayList<Book> arrComic = new ArrayList<Book>();
    private ArrayList<Book> arrReference = new ArrayList<Book>();
    private ArrayList<Book> arrFiction = new ArrayList<Book>();
    private ArrayList<Book> arrNonFiction = new ArrayList<Book>();
    private ArrayList<Book> arrDocumentary = new ArrayList<Book>();
    private ArrayList<Book> arrSelected = new ArrayList<Book>();
    
    private DefaultListModel modelComic = new DefaultListModel();
    private DefaultListModel modelReference = new DefaultListModel();
    private DefaultListModel modelFiction = new DefaultListModel();
    private DefaultListModel modelNonFiction = new DefaultListModel();
    private DefaultListModel modelDocumentary = new DefaultListModel();
    private DefaultListModel modelSelected = new DefaultListModel();

    private Book tempBook = new Book();
    private Member mem;
    private LogFile file;

    private ImageIcon img;

    private ArrayList<String> arrReceiptNo = new ArrayList<String>();
    private ArrayList<Double> arrRentPrice = new ArrayList<Double>();
    /** Creates new form Userpage */
    public UserPage(Member mem) {
        this.mem = mem;
        file = new LogFile();
        tempBook.setType("Comic");
        arrComic = db.searchBook(tempBook);
        tempBook.setType("Reference");
        arrReference = db.searchBook(tempBook);
        tempBook.setType("Fiction");
        arrFiction = db.searchBook(tempBook);
        tempBook.setType("Non-Fiction");
        arrNonFiction = db.searchBook(tempBook);
        tempBook.setType("Documentary");
        arrDocumentary = db.searchBook(tempBook);

        img = new ImageIcon(this.getClass().getResource("images/SMD_Library_Background.jpg"));
        UIManager.put("TabbedPane.contentOpaque", Boolean.FALSE);
        initComponents();
        jTabbedPane1.setOpaque(false);
        setBackground();
        
        jlbWelcome.setText("Hi, "+this.mem.getLastName());
        jlbMemberID.setText("ID: "+this.mem.getID());
        jtfInfoID.setText(mem.getID());
        jtfInfoFirstName.setText(mem.getFirstName());
        jtfInfoLastName.setText(mem.getLastName());
        jtfInfoIC.setText(mem.getIC());
        jtfInfoPhoneNo.setText(mem.getPhone());
        jtfInfoGender.setText(mem.getGender());
        jtfInfoQuestion.setText(mem.getQuestion());
        jtfInfoAnswer.setText(mem.getAnswer());
        jtfInfoBalance.setText(String.format("RM %.2f",mem.getBalance()));
        try{
            if(arrComic!=null)
                for(int i=0;i<arrComic.size();i++)
                    modelComic.addElement("<"+arrComic.get(i).getTitle()+"> by "+arrComic.get(i).getAuthor());
            if(arrReference!=null)
                for(int i=0;i<arrReference.size();i++)
                    modelReference.addElement("<"+arrReference.get(i).getTitle()+"> by "+arrReference.get(i).getAuthor());
            if(arrFiction!=null)
                for(int i=0;i<arrFiction.size();i++)
                    modelFiction.addElement("<"+arrFiction.get(i).getTitle()+"> by "+arrFiction.get(i).getAuthor());
            if(arrNonFiction!=null)
                for(int i=0;i<arrNonFiction.size();i++)
                    modelNonFiction.addElement("<"+arrNonFiction.get(i).getTitle()+"> by "+arrNonFiction.get(i).getAuthor());
            if(arrDocumentary!=null)
                for(int i=0;i<arrDocumentary.size();i++)
                    modelDocumentary.addElement("<"+arrDocumentary.get(i).getTitle()+"> by "+arrDocumentary.get(i).getAuthor());

            setLocationRelativeTo(null);
        jListDisplay.setModel(modelComic);
        jpnMemberInfo.setOpaque(false);
        jpnBookStore.setOpaque(false);
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null,"NullPointerException: "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
            file.exceptionRecord(e.getStackTrace());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Exception: "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
            file.exceptionRecord(e.getStackTrace());
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnOuter = new javax.swing.JPanel()
        {
            protected void paintComponent(Graphics g){
                //  Scale image to size of component
                Dimension d = getSize();
                g.drawImage(img.getImage(), 0, 0, d.width, d.height, null);
                super.paintComponent(g);
            }
        }
        ;
        jTabbedPane1 = new javax.swing.JTabbedPane()

        ;
        jpnBookStore = new javax.swing.JPanel();
        jcbType = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDisplay = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListSelected = new javax.swing.JList();
        jbtAdd = new javax.swing.JButton();
        jbtRemove = new javax.swing.JButton();
        jbtInfo = new javax.swing.JButton();
        jbtClear = new javax.swing.JButton();
        jbtOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jpnMemberInfo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jbtEditProfile = new javax.swing.JButton();
        jtfInfoID = new javax.swing.JTextField();
        jtfInfoLastName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtfInfoPhoneNo = new javax.swing.JTextField();
        jtfInfoFirstName = new javax.swing.JTextField();
        jtfInfoIC = new javax.swing.JTextField();
        jtfInfoBalance = new javax.swing.JTextField();
        jtfInfoAnswer = new javax.swing.JTextField();
        jtfInfoQuestion = new javax.swing.JTextField();
        jtfInfoGender = new javax.swing.JTextField();
        jlbMemberID = new javax.swing.JLabel();
        jlbWelcome = new javax.swing.JLabel();
        jlbAdvanceSearch = new javax.swing.JLabel();
        jlbLogout = new javax.swing.JLabel();
        jlbContactUs = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SMD Library");
        setIconImage(new ImageIcon(getClass().getResource("images/HomeIcon.png")).getImage());
        setResizable(false);

        jcbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Comic", "Reference", "Fiction", "Non-Fiction", "Documentary" }));
        jcbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTypeActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jListDisplay);

        jScrollPane2.setViewportView(jListSelected);

        jbtAdd.setText("Add>>");
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });

        jbtRemove.setText("<<Remove");
        jbtRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveActionPerformed(evt);
            }
        });

        jbtInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/128px-Crystal_Clear_action_info.svg.png"))); // NOI18N
        jbtInfo.setText("More Info");
        jbtInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInfoActionPerformed(evt);
            }
        });

        jbtClear.setText("Clear");
        jbtClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtClearActionPerformed(evt);
            }
        });

        jbtOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ok-128.png"))); // NOI18N
        jbtOk.setText("Ok");
        jbtOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtOkActionPerformed(evt);
            }
        });

        jLabel1.setText("Book Type");

        javax.swing.GroupLayout jpnBookStoreLayout = new javax.swing.GroupLayout(jpnBookStore);
        jpnBookStore.setLayout(jpnBookStoreLayout);
        jpnBookStoreLayout.setHorizontalGroup(
            jpnBookStoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBookStoreLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jcbType, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(459, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnBookStoreLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jpnBookStoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnBookStoreLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(jpnBookStoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtRemove))
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBookStoreLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jbtInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 256, Short.MAX_VALUE)
                        .addComponent(jbtOk)
                        .addGap(57, 57, 57)))
                .addGap(62, 62, 62))
        );
        jpnBookStoreLayout.setVerticalGroup(
            jpnBookStoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBookStoreLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnBookStoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jpnBookStoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnBookStoreLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jbtAdd)
                        .addGap(29, 29, 29)
                        .addComponent(jbtRemove)
                        .addGap(37, 37, 37)
                        .addComponent(jbtClear))
                    .addGroup(jpnBookStoreLayout.createSequentialGroup()
                        .addGroup(jpnBookStoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jpnBookStoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtInfo)
                            .addComponent(jbtOk))))
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Book Store", jpnBookStore);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Member ID");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Current Card Balance");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jbtEditProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pencil-128x128.png"))); // NOI18N
        jbtEditProfile.setText("Edit Profile");
        jbtEditProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEditProfileActionPerformed(evt);
            }
        });

        jtfInfoID.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoID.setEnabled(false);

        jtfInfoLastName.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoLastName.setEnabled(false);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Last Name");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Phone No.");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Gender");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("IC");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("First Name");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Question");
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Answer");
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jtfInfoPhoneNo.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoPhoneNo.setEnabled(false);

        jtfInfoFirstName.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoFirstName.setEnabled(false);

        jtfInfoIC.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoIC.setEnabled(false);

        jtfInfoBalance.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoBalance.setEnabled(false);

        jtfInfoAnswer.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoAnswer.setEnabled(false);

        jtfInfoQuestion.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoQuestion.setEnabled(false);

        jtfInfoGender.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jtfInfoGender.setEnabled(false);

        javax.swing.GroupLayout jpnMemberInfoLayout = new javax.swing.GroupLayout(jpnMemberInfo);
        jpnMemberInfo.setLayout(jpnMemberInfoLayout);
        jpnMemberInfoLayout.setHorizontalGroup(
            jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnMemberInfoLayout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(jbtEditProfile, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addGap(218, 218, 218))
            .addGroup(jpnMemberInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnMemberInfoLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfInfoBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnMemberInfoLayout.createSequentialGroup()
                        .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtfInfoID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfInfoLastName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfInfoGender, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(jtfInfoPhoneNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))))
                .addGap(18, 22, Short.MAX_VALUE)
                .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jtfInfoAnswer)
                    .addComponent(jtfInfoQuestion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jtfInfoFirstName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfInfoIC, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jpnMemberInfoLayout.setVerticalGroup(
            jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnMemberInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnMemberInfoLayout.createSequentialGroup()
                        .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfInfoID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfInfoLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpnMemberInfoLayout.createSequentialGroup()
                        .addComponent(jtfInfoIC, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jtfInfoFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfInfoGender, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfInfoPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfInfoQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnMemberInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfInfoAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfInfoBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jbtEditProfile)
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("Member Info", jpnMemberInfo);

        jlbMemberID.setFont(new java.awt.Font("Arial", 1, 14));
        jlbMemberID.setText("ID:");

        jlbWelcome.setFont(new java.awt.Font("Arial", 1, 14));
        jlbWelcome.setText("Hi");

        jlbAdvanceSearch.setFont(new java.awt.Font("Arial", 1, 14));
        jlbAdvanceSearch.setForeground(new java.awt.Color(51, 153, 0));
        jlbAdvanceSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/229.png"))); // NOI18N
        jlbAdvanceSearch.setText("Advance Search");
        jlbAdvanceSearch.setToolTipText("Search for specific requirement");
        jlbAdvanceSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jlbAdvanceSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbAdvanceSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlbAdvanceSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlbAdvanceSearchMouseExited(evt);
            }
        });

        jlbLogout.setFont(new java.awt.Font("Arial", 1, 14));
        jlbLogout.setForeground(new java.awt.Color(51, 153, 0));
        jlbLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Log-Out.png"))); // NOI18N
        jlbLogout.setText("Log out");
        jlbLogout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jlbLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlbLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlbLogoutMouseExited(evt);
            }
        });

        jlbContactUs.setFont(new java.awt.Font("Arial", 1, 14));
        jlbContactUs.setForeground(new java.awt.Color(51, 153, 0));
        jlbContactUs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/contact.png"))); // NOI18N
        jlbContactUs.setText("Contact Us");
        jlbContactUs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jlbContactUs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbContactUsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlbContactUsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlbContactUsMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jpnOuterLayout = new javax.swing.GroupLayout(jpnOuter);
        jpnOuter.setLayout(jpnOuterLayout);
        jpnOuterLayout.setHorizontalGroup(
            jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnOuterLayout.createSequentialGroup()
                        .addComponent(jlbWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 552, Short.MAX_VALUE)
                        .addComponent(jlbLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(jpnOuterLayout.createSequentialGroup()
                        .addComponent(jlbMemberID)
                        .addContainerGap(668, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnOuterLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jlbAdvanceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                .addComponent(jlbContactUs, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpnOuterLayout.setVerticalGroup(
            jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbWelcome)
                    .addComponent(jlbLogout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlbMemberID)
                .addGap(7, 7, 7)
                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbAdvanceSearch)
                    .addComponent(jlbContactUs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnOuter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnOuter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTypeActionPerformed
        // TODO add your handling code here:
        switch(jcbType.getSelectedIndex())
        {
            case 0:
            {
                jListDisplay.setModel(modelComic);
                break;
            }
            case 1:
            {
                jListDisplay.setModel(modelReference);
                break;
            }
            case 2:
            {
                jListDisplay.setModel(modelFiction);
                break;
            }
            case 3:
            {
                jListDisplay.setModel(modelNonFiction);
                break;
            }
            case 4:
            {
                jListDisplay.setModel(modelDocumentary);
                break;
            }
        }

    }//GEN-LAST:event_jcbTypeActionPerformed

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        // TODO add your handling code here:

        if(jListDisplay.isSelectionEmpty())
            JOptionPane.showMessageDialog(null,"Nothing to be selected!","ERROR",JOptionPane.ERROR_MESSAGE);
        else{
        int typeIndex = jcbType.getSelectedIndex();
        int listIndex = jListDisplay.getSelectedIndex();

        switch(typeIndex)
        {
            case 0:
            {
                arrSelected.add(arrComic.get(listIndex));
                modelSelected.addElement("<"+arrComic.get(listIndex).getTitle()+"> by "+arrComic.get(listIndex).getAuthor());
                arrComic.remove(listIndex);
                modelComic.removeElementAt(listIndex);
                jListDisplay.setModel(modelComic);
                break;
            }
            case 1:
            {
                arrSelected.add(arrReference.get(listIndex));
                modelSelected.addElement("<"+arrReference.get(listIndex).getTitle()+"> by "+arrReference.get(listIndex).getAuthor());
                arrReference.remove(listIndex);
                modelReference.removeElementAt(listIndex);
                jListDisplay.setModel(modelReference);
                break;
            }
            case 2:
            {
                arrSelected.add(arrFiction.get(listIndex));
                modelSelected.addElement("<"+arrFiction.get(listIndex).getTitle()+"> by "+arrFiction.get(listIndex).getAuthor());
                arrFiction.remove(listIndex);
                modelFiction.removeElementAt(listIndex);
                jListDisplay.setModel(modelFiction);
                break;
            }
            case 3:
            {
                arrSelected.add(arrNonFiction.get(listIndex));
                modelSelected.addElement("<"+arrNonFiction.get(listIndex).getTitle()+"> by "+arrNonFiction.get(listIndex).getAuthor());
                arrNonFiction.remove(listIndex);
                modelNonFiction.removeElementAt(listIndex);
                jListDisplay.setModel(modelNonFiction);
                break;
            }
            case 4:
            {
                arrSelected.add(arrDocumentary.get(listIndex));
                modelSelected.addElement("<"+arrDocumentary.get(listIndex).getTitle()+"> by "+arrDocumentary.get(listIndex).getAuthor());
                arrDocumentary.remove(listIndex);
                modelDocumentary.removeElementAt(listIndex);
                jListDisplay.setModel(modelDocumentary);
                break;
            }
        }
        jListSelected.setModel(modelSelected);
        }

    }//GEN-LAST:event_jbtAddActionPerformed

    private void jbtRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveActionPerformed
        // TODO add your handling code here:
        if(jListSelected.isSelectionEmpty())
            JOptionPane.showMessageDialog(null,"Nothing to be selected!","ERROR",JOptionPane.ERROR_MESSAGE);
        else{
            try{
                int listSelectedIndex = jListSelected.getSelectedIndex();
                int last;
                if(arrSelected.get(listSelectedIndex).getType().equals("Comic"))
                {
                    if(arrComic!=null)
                    {
                        arrComic.add(arrSelected.get(listSelectedIndex));
                        last = arrComic.size()-1;
                        modelComic.addElement("<"+arrComic.get(last).getTitle()+"> by "+arrComic.get(last).getAuthor());
                    }
                }
                else if(arrSelected.get(listSelectedIndex).getType().equals("Reference"))
                {
                    if(arrReference!=null)
                    {
                        arrReference.add(arrSelected.get(listSelectedIndex));
                        last = arrReference.size()-1;
                        modelReference.addElement("<"+arrReference.get(last).getTitle()+"> by "+arrReference.get(last).getAuthor());
                    }
                }
                else if(arrSelected.get(listSelectedIndex).getType().equals("Fiction"))
                {
                    if(arrFiction!=null)
                    {
                        arrFiction.add(arrSelected.get(listSelectedIndex));
                        last = arrFiction.size()-1;
                        modelFiction.addElement("<"+arrFiction.get(last).getTitle()+"> by "+arrFiction.get(last).getAuthor());
                    }
                }
                else if(arrSelected.get(listSelectedIndex).getType().equals("Non-Fiction"))
                {
                    if(arrNonFiction!=null)
                    {
                        arrNonFiction.add(arrSelected.get(listSelectedIndex));
                        last = arrNonFiction.size()-1;
                        modelNonFiction.addElement("<"+arrNonFiction.get(last).getTitle()+"> by "+arrNonFiction.get(last).getAuthor());
                    }
                }
                else if(arrSelected.get(listSelectedIndex).getType().equals("Documentary"))
                {
                    if(arrDocumentary!=null)
                    {
                        arrDocumentary.add(arrSelected.get(listSelectedIndex));
                        last = arrDocumentary.size()-1;
                        modelDocumentary.addElement("<"+arrDocumentary.get(last).getTitle()+"> by "+arrDocumentary.get(last).getAuthor());
                    }
                }
                modelSelected.removeElementAt(listSelectedIndex);
                arrSelected.remove(listSelectedIndex);
                jListSelected.setModel(modelSelected);
            }
            catch(ArrayIndexOutOfBoundsException e){
                JOptionPane.showMessageDialog(null,"ArrayIndexOutOfBoundsException: "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
                file.exceptionRecord(e.getStackTrace());
            }
        }
    }//GEN-LAST:event_jbtRemoveActionPerformed

    private void jbtEditProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEditProfileActionPerformed
        // TODO add your handling code here:
        new EditProfilePage(mem).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtEditProfileActionPerformed

    private void jlbLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbLogoutMouseEntered
        // TODO add your handling code here:
        jlbLogout.setFont(new Font("Arial",Font.BOLD,14));
        jlbLogout.setForeground(Color.red);
    }//GEN-LAST:event_jlbLogoutMouseEntered

    private void jlbLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbLogoutMouseExited
        // TODO add your handling code here:
        jlbLogout.setFont(new Font("Arial",Font.BOLD,14));
        jlbLogout.setForeground(new Color(51, 153, 0));
    }//GEN-LAST:event_jlbLogoutMouseExited

    private void jlbLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbLogoutMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new LoginPage().setVisible(true);
    }//GEN-LAST:event_jlbLogoutMouseClicked

    private void jbtInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInfoActionPerformed
        // TODO add your handling code here:
        if(!jListDisplay.isSelectionEmpty()) {
            int index = jListDisplay.getSelectedIndex();

            Book tempBook = new Book();
            switch(jcbType.getSelectedIndex())
        {
            case 0:
            {
                tempBook = arrComic.get(index);
                break;
            }
            case 1:
            {
                tempBook = arrReference.get(index);
                break;
            }
            case 2:
            {
                tempBook = arrFiction.get(index);
                break;
            }
            case 3:
            {
                tempBook = arrNonFiction.get(index);
                break;
            }
            case 4:
            {
                tempBook = arrDocumentary.get(index);
                break;
            }
        }
            String info = "ISBN: "+tempBook.getISBN()+
                    "\nTitle: "+tempBook.getTitle()+
                    "\nPublisher: "+tempBook.getPublisher()+
                    "\nAuthor: "+tempBook.getAuthor()+
                    "\nType: "+tempBook.getType()+
                    "\nRent Price: RM "+ tempBook.getRentPrice()+
                    "\nDescription:\n\n"+tempBook.getDescription();

            JOptionPane.showMessageDialog(null,info,"<"+tempBook.getTitle()+"> by "+tempBook.getAuthor(),JOptionPane.INFORMATION_MESSAGE);
        } else
            JOptionPane.showMessageDialog(null,"No record selected!","No result",JOptionPane.ERROR_MESSAGE);
}//GEN-LAST:event_jbtInfoActionPerformed

    private void jbtClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtClearActionPerformed
        // TODO add your handling code here:
        jcbType.setSelectedIndex(0);
        clear();
}//GEN-LAST:event_jbtClearActionPerformed

    private void clear()
    {
        arrReceiptNo.clear();
        arrRentPrice.clear();
        modelSelected.removeAllElements();
        jListSelected.setModel(modelSelected);
        try{
            for(int i=0;i<arrSelected.size();i++)
            {
                int last;
                if(arrSelected.get(i).getType().equals("Comic"))
                {
                    if(arrComic!=null)
                    {
                        if(arrSelected.get(i).getQuantity()>=1)
                        {
                            arrComic.add(arrSelected.get(i));
                            last = arrComic.size()-1;
                            modelComic.addElement("<"+arrComic.get(last).getTitle()+"> by "+arrComic.get(last).getAuthor());
                        }
                    }
                }
                else if(arrSelected.get(i).getType().equals("Reference"))
                {
                    if(arrReference!=null)
                    {
                        if(arrSelected.get(i).getQuantity()>=1)
                        {
                            arrReference.add(arrSelected.get(i));
                            last = arrReference.size()-1;
                            modelReference.addElement("<"+arrReference.get(last).getTitle()+"> by "+arrReference.get(last).getAuthor());
                        }
                    }
                }
                else if(arrSelected.get(i).getType().equals("Fiction"))
                {
                    if(arrFiction!=null)
                    {
                        if(arrSelected.get(i).getQuantity()>=1)
                        {
                            arrFiction.add(arrSelected.get(i));
                            last = arrFiction.size()-1;
                            modelFiction.addElement("<"+arrFiction.get(last).getTitle()+"> by "+arrFiction.get(last).getAuthor());
                        }
                    }
                }
                else if(arrSelected.get(i).getType().equals("Non-Fiction"))
                {
                    if(arrNonFiction!=null)
                    {
                        if(arrSelected.get(i).getQuantity()>=1)
                        {
                            arrNonFiction.add(arrSelected.get(i));
                            last = arrNonFiction.size()-1;
                            modelNonFiction.addElement("<"+arrNonFiction.get(last).getTitle()+"> by "+arrNonFiction.get(last).getAuthor());
                        }
                    }
                }
                else if(arrSelected.get(i).getType().equals("Documentary"))
                {
                    if(arrDocumentary!=null)
                    {
                        if(arrSelected.get(i).getQuantity()>=1)
                        {
                            arrDocumentary.add(arrSelected.get(i));
                            last = arrDocumentary.size()-1;
                            modelDocumentary.addElement("<"+arrDocumentary.get(last).getTitle()+"> by "+arrDocumentary.get(last).getAuthor());
                        }
                    }
                }
            }
            }
            catch(ArrayIndexOutOfBoundsException e){
                JOptionPane.showMessageDialog(null,"ArrayIndexOutOfBoundsException: "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
                file.exceptionRecord(e.getStackTrace());
            }
        arrSelected.clear();
    }
    private void jbtOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtOkActionPerformed
        // TODO add your handling code here:
        String []options = {"Confirm","Cancel"};
        String []printOption = {"Print out the receipt","Do not print out the receipt"};
        String receipt = "";
        double total = 0.0;
        double balance = mem.getBalance();
        boolean isEnough = true;
        if(balance<1)
            isEnough = false;

        if(arrSelected.isEmpty())
            JOptionPane.showMessageDialog(null,"Nothing selected!","Empty",JOptionPane.PLAIN_MESSAGE);
        else{
            if(isEnough)
            {
                int x = JOptionPane.showOptionDialog(null,"Are you sure you want to borrow all these book?","Selected Book",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

                if(x==JOptionPane.NO_OPTION || x==JOptionPane.CLOSED_OPTION)
                    JOptionPane.showMessageDialog(null,"Please re-choose!","Book rent cancelled",JOptionPane.PLAIN_MESSAGE);
                else {
                    for(int i=0;i<arrSelected.size();i++) {
                        arrReceiptNo.add(db.borrowBook(mem.getID(),arrSelected.get(i).getISBN()));
                        arrRentPrice.add(db.getCurrentBookRentPrice());
                        balance = balance - convertCurrency(arrRentPrice.get(i));
                        if(balance<0)
                        {
                            JOptionPane.showMessageDialog(null,"Not enough balance!","Warning",JOptionPane.WARNING_MESSAGE);
                            break;
                        }
                        arrSelected.get(i).setQuantity(arrSelected.get(i).getQuantity()-1);
                        receipt += arrReceiptNo.get(i) +": <"+arrSelected.get(i).getTitle()+"> RM"+convertCurrency(arrRentPrice.get(i))+"\n";
                        total += arrRentPrice.get(i);
                    }
                    int receiptOption = JOptionPane.showOptionDialog(null,String.format("Your receipt no:\n"+receipt+"\nTotal: RM %.2f",total),"Do you want to print out the receipt?",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,printOption,printOption[1]);
                    if(receiptOption == JOptionPane.YES_OPTION)
                    {
                        file.printReceipt(String.format("Your receipt no:\n"+receipt+"\nTotal: RM %.2f",total));
                    }
                    total = Double.parseDouble(String.format("%.2f",total));
                    mem.setBalance(db.deductBalance(mem.getID(), total));
                    JOptionPane.showMessageDialog(null,"You current balance is RM "+convertCurrency(mem.getBalance()));
                    jtfInfoBalance.setText(mem.getBalance()+"");
                    clear();
                }
            }
            else
                JOptionPane.showMessageDialog(null,String.format("Not enough balance!\nYour current balance is only RM %.2f",balance),"Warning",JOptionPane.WARNING_MESSAGE);
        }
}//GEN-LAST:event_jbtOkActionPerformed

    private void jlbAdvanceSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbAdvanceSearchMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new SearchBookPage(mem).setVisible(true);
    }//GEN-LAST:event_jlbAdvanceSearchMouseClicked

    private void jlbAdvanceSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbAdvanceSearchMouseEntered
        // TODO add your handling code here:
        jlbAdvanceSearch.setFont(new Font("Arial",Font.BOLD,14));
        jlbAdvanceSearch.setForeground(Color.red);
    }//GEN-LAST:event_jlbAdvanceSearchMouseEntered

    private void jlbAdvanceSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbAdvanceSearchMouseExited
        // TODO add your handling code here:
        jlbAdvanceSearch.setFont(new Font("Arial",Font.BOLD,14));
        jlbAdvanceSearch.setForeground(new Color(51, 153, 0));
    }//GEN-LAST:event_jlbAdvanceSearchMouseExited

    private void jlbContactUsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbContactUsMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new ContactUsPage(mem).setVisible(true);
    }//GEN-LAST:event_jlbContactUsMouseClicked

    private void jlbContactUsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbContactUsMouseEntered
        // TODO add your handling code here:
        jlbContactUs.setFont(new Font("Arial",Font.BOLD,14));
        jlbContactUs.setForeground(Color.red);
    }//GEN-LAST:event_jlbContactUsMouseEntered

    private void jlbContactUsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbContactUsMouseExited
        // TODO add your handling code here:
        jlbContactUs.setFont(new Font("Arial",Font.BOLD,14));
        jlbContactUs.setForeground(new Color(51, 153, 0));
    }//GEN-LAST:event_jlbContactUsMouseExited

  private void setBackground()
  {
          java.net.URL url = this.getClass().getResource("images/SMD_Library_Background.jpg");
          ImageIcon imageBack = new ImageIcon(url);
          JLabel jlbBackground = new JLabel(imageBack);
          jlbBackground.setBounds(0, 0, imageBack.getIconWidth(),imageBack.getIconHeight());
          getLayeredPane().add(jlbBackground, new Integer(Integer.MIN_VALUE));
          jpnOuter.setOpaque(false);
          setContentPane(jpnOuter);
  }

  private double convertCurrency(double money)
	{
		return Double.parseDouble(String.format("%.2f",money));
	}
    /**
    * @param args the command line arguments
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListDisplay;
    private javax.swing.JList jListSelected;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtClear;
    private javax.swing.JButton jbtEditProfile;
    private javax.swing.JButton jbtInfo;
    private javax.swing.JButton jbtOk;
    private javax.swing.JButton jbtRemove;
    private javax.swing.JComboBox jcbType;
    private javax.swing.JLabel jlbAdvanceSearch;
    private javax.swing.JLabel jlbContactUs;
    private javax.swing.JLabel jlbLogout;
    private javax.swing.JLabel jlbMemberID;
    private javax.swing.JLabel jlbWelcome;
    private javax.swing.JPanel jpnBookStore;
    private javax.swing.JPanel jpnMemberInfo;
    private javax.swing.JPanel jpnOuter;
    private javax.swing.JTextField jtfInfoAnswer;
    private javax.swing.JTextField jtfInfoBalance;
    private javax.swing.JTextField jtfInfoFirstName;
    private javax.swing.JTextField jtfInfoGender;
    private javax.swing.JTextField jtfInfoIC;
    private javax.swing.JTextField jtfInfoID;
    private javax.swing.JTextField jtfInfoLastName;
    private javax.swing.JTextField jtfInfoPhoneNo;
    private javax.swing.JTextField jtfInfoQuestion;
    // End of variables declaration//GEN-END:variables

}
