/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchBookPage.java
 *
 * Created on Nov 14, 2009, 2:51:41 PM
 */

/**
 *
 * @author Js Lim
 */
import java.util.ArrayList;
import javax.swing.*;
import java.awt.*;
import javax.swing.ImageIcon;

public class SearchBookPage extends javax.swing.JFrame {

    /** Creates new form SearchBookPage */
    private Database db = new Database();
    private DefaultListModel searchBookModel=new DefaultListModel();
    private DefaultListModel selectedBookModel=new DefaultListModel();
    private ArrayList<Book> arrSearchedBook;
    private ArrayList<Book> arrSelectedBook = new ArrayList<Book>();

    private Member mem;
    private ImageIcon img;

    private ArrayList<String> arrReceiptNo = new ArrayList<String>();
    private ArrayList<Double> arrRentPrice = new ArrayList<Double>();
    
    public SearchBookPage(Member mem) {
        this.mem = mem;
        img = new ImageIcon(this.getClass().getResource("images/SMD_Library_Background.jpg"));
        initComponents();
        setBackground();

        jlbWelcome.setText("Hi, "+this.mem.getLastName());
        jlbID.setText("ID: "+this.mem.getID());
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnOuter = new javax.swing.JPanel()
        {
            protected void paintComponent(Graphics g){
                //  Scale image to size of component
                Dimension d = getSize();
                g.drawImage(img.getImage(), 0, 0, d.width, d.height, null);
                super.paintComponent(g);
            }
        }
        ;
        jcbSearch = new javax.swing.JComboBox();
        jlbSearch = new javax.swing.JLabel();
        jtfSearch = new javax.swing.JTextField();
        jlbLogout = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlbWelcome = new javax.swing.JLabel();
        jlbID = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jltSearchResult = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jltSelectedBook = new javax.swing.JList();
        jbtBack = new javax.swing.JButton();
        jbtInfo = new javax.swing.JButton();
        jbtAdd = new javax.swing.JButton();
        jbtSearch = new javax.swing.JButton();
        jbtRemove = new javax.swing.JButton();
        jbtClear = new javax.swing.JButton();
        jbtOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Advance Book Search");
        setIconImage(new ImageIcon(getClass().getResource("images/HomeIcon.png")).getImage());
        setResizable(false);

        jcbSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ISBN", "Title", "Publisher", "Author", "Type", "Description" }));
        jcbSearch.setSelectedIndex(1);

        jlbSearch.setText("Search for");

        jlbLogout.setFont(new java.awt.Font("Arial", 1, 14));
        jlbLogout.setForeground(new java.awt.Color(51, 153, 0));
        jlbLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Log-Out.png"))); // NOI18N
        jlbLogout.setText("Log out");
        jlbLogout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jlbLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlbLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlbLogoutMouseExited(evt);
            }
        });

        jLabel2.setText("Selected Books");

        jlbWelcome.setFont(new java.awt.Font("Arial", 1, 14));
        jlbWelcome.setText("Hi");

        jlbID.setFont(new java.awt.Font("Arial", 1, 14));
        jlbID.setText("ID:");

        jLabel1.setText("Searched Books");

        jltSearchResult.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jltSearchResult);

        jltSelectedBook.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jltSelectedBook.setToolTipText("Please click <Ok> before clear all the result");
        jScrollPane2.setViewportView(jltSelectedBook);

        jbtBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BackButton.png"))); // NOI18N
        jbtBack.setMnemonic('B');
        jbtBack.setText("Back");
        jbtBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBackActionPerformed(evt);
            }
        });

        jbtInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/128px-Crystal_Clear_action_info.svg.png"))); // NOI18N
        jbtInfo.setMnemonic('I');
        jbtInfo.setText("More Info");
        jbtInfo.setToolTipText("Only refer to <Searched Book>");
        jbtInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInfoActionPerformed(evt);
            }
        });

        jbtAdd.setMnemonic('A');
        jbtAdd.setText("Add >>");
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });

        jbtSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/229.png"))); // NOI18N
        jbtSearch.setMnemonic('S');
        jbtSearch.setText("Search");
        jbtSearch.setToolTipText("Must clear before have a new search");
        jbtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSearchActionPerformed(evt);
            }
        });

        jbtRemove.setMnemonic('R');
        jbtRemove.setText("<<Remove");
        jbtRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveActionPerformed(evt);
            }
        });

        jbtClear.setMnemonic('C');
        jbtClear.setText("Clear");
        jbtClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtClearActionPerformed(evt);
            }
        });

        jbtOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ok-128.png"))); // NOI18N
        jbtOk.setMnemonic('O');
        jbtOk.setText("Ok");
        jbtOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnOuterLayout = new javax.swing.GroupLayout(jpnOuter);
        jpnOuter.setLayout(jpnOuterLayout);
        jpnOuterLayout.setHorizontalGroup(
            jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnOuterLayout.createSequentialGroup()
                        .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnOuterLayout.createSequentialGroup()
                                .addComponent(jlbSearch)
                                .addGap(18, 18, 18)
                                .addComponent(jcbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jlbID)
                            .addComponent(jlbWelcome))
                        .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnOuterLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnOuterLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 532, Short.MAX_VALUE)
                                .addComponent(jlbLogout)
                                .addGap(12, 12, 12))))
                    .addGroup(jpnOuterLayout.createSequentialGroup()
                        .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnOuterLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpnOuterLayout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(jLabel1)))
                        .addGap(16, 16, 16)
                        .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnOuterLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbtClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnOuterLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(128, 128, 128)))))
                .addGap(12, 12, 12))
            .addGroup(jpnOuterLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jbtSearch)
                .addGap(34, 34, 34)
                .addComponent(jbtInfo)
                .addGap(240, 240, 240)
                .addComponent(jbtOk)
                .addGap(39, 39, 39)
                .addComponent(jbtBack)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jpnOuterLayout.setVerticalGroup(
            jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnOuterLayout.createSequentialGroup()
                        .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnOuterLayout.createSequentialGroup()
                                .addComponent(jlbWelcome)
                                .addGap(6, 6, 6)
                                .addComponent(jlbID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlbSearch)
                                    .addComponent(jcbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(jpnOuterLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jlbLogout)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnOuterLayout.createSequentialGroup()
                        .addComponent(jbtAdd)
                        .addGap(49, 49, 49)
                        .addComponent(jbtRemove)
                        .addGap(43, 43, 43)
                        .addComponent(jbtClear)
                        .addGap(71, 71, 71)))
                .addGap(8, 8, 8)
                .addGroup(jpnOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtInfo)
                    .addComponent(jbtSearch)
                    .addComponent(jbtBack)
                    .addComponent(jbtOk))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnOuter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnOuter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSearchActionPerformed
        // TODO add your handling code here:
        int index = jcbSearch.getSelectedIndex();
        String keyword = jtfSearch.getText();
        Book tempBook = new Book();

        if(arrSearchedBook!=null)
            JOptionPane.showMessageDialog(null,"Please clear all the result first!","Warning",JOptionPane.WARNING_MESSAGE);
        else if(keyword.equals(""))
            JOptionPane.showMessageDialog(null,"No record found!","Not found",JOptionPane.WARNING_MESSAGE);
        else
        {
            switch(index)
            {
                case 0:{
                    tempBook.setISBN(keyword);
                    break;
                }
                case 1:{
                    tempBook.setTitle(keyword);
                    break;
                }
                case 2:{
                    tempBook.setPublisher(keyword);
                    break;
                }
                case 3:{
                    tempBook.setAuthor(keyword);
                    break;
                }
                case 4:{
                    tempBook.setType(keyword);
                    break;
                }
                case 5:{
                    tempBook.setDescription(keyword);
                    break;
                }
                default:
                    break;
            }

            arrSearchedBook = db.searchBook(tempBook);
            if(arrSearchedBook == null)
                JOptionPane.showMessageDialog(null,"No record found!","Not found",JOptionPane.WARNING_MESSAGE);
            else{
                for(int i=0;i<arrSearchedBook.size();i++)
                {
                    searchBookModel.addElement("<"+arrSearchedBook.get(i).getTitle()+">"+" by "+arrSearchedBook.get(i).getAuthor());
                }
                jltSearchResult.setModel(searchBookModel);
            }
        }
    }//GEN-LAST:event_jbtSearchActionPerformed

    private void jbtInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInfoActionPerformed
        // TODO add your handling code here:
        if(!jltSearchResult.isSelectionEmpty())
        {
            int index = jltSearchResult.getSelectedIndex();

            Book tempBook = arrSearchedBook.get(index);
            String info = "ISBN: "+tempBook.getISBN()+
                        "\nTitle: "+tempBook.getTitle()+
                        "\nPublisher: "+tempBook.getPublisher()+
                        "\nAuthor: "+tempBook.getAuthor()+
                        "\nType: "+tempBook.getType()+
                        "\nRent Price: RM "+ tempBook.getRentPrice()+
                        "\nDescription:\n\n"+tempBook.getDescription();

            JOptionPane.showMessageDialog(null,info,"<"+tempBook.getTitle()+"> by "+tempBook.getAuthor(),JOptionPane.INFORMATION_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(null,"No record selected!","No result",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jbtInfoActionPerformed

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        // TODO add your handling code here:
        if(jltSearchResult.isSelectionEmpty())
            JOptionPane.showMessageDialog(null,"No item selected!","Item not found",JOptionPane.ERROR_MESSAGE);
        else{
            int index = jltSearchResult.getSelectedIndex();
            arrSelectedBook.add(arrSearchedBook.get(index));
            selectedBookModel.addElement("<"+arrSearchedBook.get(index).getTitle()+"> by "+arrSearchedBook.get(index).getAuthor());
            arrSearchedBook.remove(index);
            searchBookModel.removeElementAt(index);
            jltSearchResult.setModel(searchBookModel);
            jltSelectedBook.setModel(selectedBookModel);
        }
    }//GEN-LAST:event_jbtAddActionPerformed

    private void jbtRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveActionPerformed
        // TODO add your handling code here:
        if(jltSelectedBook.isSelectionEmpty())
            JOptionPane.showMessageDialog(null,"No item selected!","Item not found",JOptionPane.ERROR_MESSAGE);
        else{
            int index = jltSelectedBook.getSelectedIndex();
            arrSearchedBook.add(arrSelectedBook.get(index));
            int last = arrSearchedBook.size()-1;
            searchBookModel.addElement("<"+arrSearchedBook.get(last).getTitle()+"> by "+arrSearchedBook.get(last).getAuthor());
            selectedBookModel.removeElementAt(index);
            arrSelectedBook.remove(index);
            jltSelectedBook.setModel(selectedBookModel);
        }
    }//GEN-LAST:event_jbtRemoveActionPerformed

    private void jbtClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtClearActionPerformed
        // TODO add your handling code here:
        if(arrSearchedBook==null)
        {
            JOptionPane.showMessageDialog(null,"Already clear!");
        }
        else
        {
            clear();
        }
    }//GEN-LAST:event_jbtClearActionPerformed

    private void jbtOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtOkActionPerformed
        // TODO add your handling code here:
        String []options = {"Confirm","Cancel"};
        String []printOption = {"Print out the receipt","Do not print out the receipt"};
        String receipt = "";
        double total = 0.0;
        double balance = mem.getBalance();
        boolean isEnough = true;
        if(balance < 1)
            isEnough = false;

        if(arrSelectedBook.isEmpty())
            JOptionPane.showMessageDialog(null,"Nothing selected!","Empty",JOptionPane.PLAIN_MESSAGE);
        else{
            if(isEnough)
            {
                int x = JOptionPane.showOptionDialog(null,"Are you sure want to borrow these books?","Selected Book",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

                if(x==JOptionPane.NO_OPTION || x==JOptionPane.CLOSED_OPTION)
                    JOptionPane.showMessageDialog(null,"Please re-choose!","Book rent cancelled",JOptionPane.PLAIN_MESSAGE);
                else
                {
                    for(int i=0;i<arrSelectedBook.size();i++)
                    {
                        arrReceiptNo.add(db.borrowBook(mem.getID(),arrSelectedBook.get(i).getISBN()));
                        arrRentPrice.add(db.getCurrentBookRentPrice());

                        balance = balance - convertCurrency(arrRentPrice.get(i));
                        if(balance<0)
                        {
                            JOptionPane.showMessageDialog(null,"Not enough balance!","Warning",JOptionPane.WARNING_MESSAGE);
                            break;
                        }
                        receipt += arrReceiptNo.get(i) +": <"+arrSelectedBook.get(i).getTitle()+"> RM"+convertCurrency(arrRentPrice.get(i))+"\n";
                        total += arrRentPrice.get(i);
                    }
                    int receiptOption = JOptionPane.showOptionDialog(null,String.format("Your receipt no:\n"+receipt+"\nTotal: RM %.2f",total),"Do you want to print out the receipt?",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,printOption,printOption[1]);
                    if(receiptOption == JOptionPane.YES_OPTION)
                    {
                        new LogFile().printReceipt(String.format("Your receipt no:\n"+receipt+"\nTotal: RM %.2f",total));
                    }
                    total = Double.parseDouble(String.format("%.2f",total));
                    mem.setBalance(db.deductBalance(mem.getID(),total));
                    JOptionPane.showMessageDialog(null,"You current balance is RM "+convertCurrency(mem.getBalance()));
                    clear();
                }
            }
            else
                JOptionPane.showMessageDialog(null,String.format("Not enough balance!\nYour current balance is only RM %.2f",balance),"Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbtOkActionPerformed

    private void jbtBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBackActionPerformed
        // TODO add your handling code here:
        new UserPage(mem).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtBackActionPerformed

    private void jlbLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbLogoutMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new LoginPage().setVisible(true);
}//GEN-LAST:event_jlbLogoutMouseClicked

    private void jlbLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbLogoutMouseEntered
        // TODO add your handling code here:
        jlbLogout.setFont(new Font("Arial",Font.BOLD,14));
        jlbLogout.setForeground(Color.red);
}//GEN-LAST:event_jlbLogoutMouseEntered

    private void jlbLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbLogoutMouseExited
        // TODO add your handling code here:
        jlbLogout.setFont(new Font("Arial",Font.BOLD,14));
        jlbLogout.setForeground(new Color(51, 153, 0));
}//GEN-LAST:event_jlbLogoutMouseExited

    private void clear()
    {
            jcbSearch.setSelectedIndex(1);
            jtfSearch.setText("");
            selectedBookModel.removeAllElements();
            searchBookModel.removeAllElements();
            jltSelectedBook.setModel(selectedBookModel);
            jltSearchResult.setModel(searchBookModel);
            arrSearchedBook = null;
            arrReceiptNo.clear();
            arrRentPrice.clear();
            arrSelectedBook.clear();
    }
  private void setBackground()
  {
          java.net.URL url = this.getClass().getResource("images/SMD_Library_Background.jpg");
          ImageIcon imageBack = new ImageIcon(url);
          JLabel jlbBackground = new JLabel(imageBack);
          jlbBackground.setBounds(0, 0, imageBack.getIconWidth(),imageBack.getIconHeight());
          getLayeredPane().add(jlbBackground, new Integer(Integer.MIN_VALUE));
          jpnOuter.setOpaque(false);
          setContentPane(jpnOuter);
  }

        private double convertCurrency(double money)
	{
		return Double.parseDouble(String.format("%.2f",money));
	}
    /**
    * @param args the command line arguments
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtBack;
    private javax.swing.JButton jbtClear;
    private javax.swing.JButton jbtInfo;
    private javax.swing.JButton jbtOk;
    private javax.swing.JButton jbtRemove;
    private javax.swing.JButton jbtSearch;
    private javax.swing.JComboBox jcbSearch;
    private javax.swing.JLabel jlbID;
    private javax.swing.JLabel jlbLogout;
    private javax.swing.JLabel jlbSearch;
    private javax.swing.JLabel jlbWelcome;
    private javax.swing.JList jltSearchResult;
    private javax.swing.JList jltSelectedBook;
    private javax.swing.JPanel jpnOuter;
    private javax.swing.JTextField jtfSearch;
    // End of variables declaration//GEN-END:variables

}
